@import './config';
@import './utils';

@each $color-name,
$color-value in $colors {

  .btn-#{$color-name} {
    background: $color-value;
    padding: 10px 20px;
    border-radius: 8px;
    display: inline-block;
    font-weight: bold;
    color: map-get($colors, dark);

    &.big {
      padding: 16px 32px;
      font-size: 1.24rem;
    }
  }

  @each $opacity-value,
  $opacity-level in $opacity {
    .color-#{$color-name}-#{$opacity-value} {
      color: rgba($color-value, $opacity-level);
    }

    .bg-#{$color-name}-#{$opacity-value} {
      background: rgba($color-value, $opacity-level);
    }

    .border-color-#{$color-name}-#{$opacity-value} {
      border-color: rgba($color-value, $opacity-level);
    }

    .dark\:border-color-#{$color-name}-#{$opacity-value} {
      @include apply-dark-style() {
        border-color: rgba($color-value, $opacity-level);
      }
    }

    .dark\:color-#{$color-name}-#{$opacity-value} {
      @include apply-dark-style() {
        color: rgba($color-value, $opacity-level);
      }
    }

    .dark\:bg-#{$color-name}-#{$opacity-value} {
      @include apply-dark-style() {
        background: rgba($color-value, $opacity-level);
      }
    }
  }
}

.fw-bold {
  font-weight: bold !important;
}

.lg-primary-to-secondary {
  background: linear-gradient(to right, map-get($colors, primary), map-get($colors, secondary));
}

.vh-100 {
  height: 100vh;
}

.min-vh-100 {
  min-height: 100vh !important;
}

.h-100 {
  height: 100%;
}

// . backdrop-filter: blur(5px);
.backdrop-none {
  backdrop-filter: none !important;
}

.backdrop-blur-none {
  backdrop-filter: blur(0px) !important;
}

.w-100 {
  width: 100%;
}

.text-center {
  text-align: center;
}

.d-none {
  display: none;
}

.d-block {
  display: block;
}

.obj-cover {
  object-fit: cover;
}


@include web() {
  .d-md-none {
    display: none;
  }

  .d-md-block {
    display: block;
  }
}

.text-justify {
  text-align: justify;
}

.justify-content-center {
  justify-content: center;
}

.row {
  display: grid;
  grid-template-columns: repeat($max-columns, 1fr);
  grid-gap: 12px;
}

.overflow-hidden {
  overflow: hidden;
}

.position-relative {
  position: relative !important;
}

.fw-regular {
  font-weight: 500 !important;
}

.bg-transparent {
  background: transparent !important;
}

.align-items-center {
  align-items: center;
}

.text-upper {
  text-transform: uppercase;
}

.container {
  @include container();
}

.cursor-pointer {
  cursor: pointer;
}

.radius-20 {
  border-radius: 20px;
}

.text-nowrap {
  word-wrap: nowrap;
}



.object-cover {
  object-fit: cover;
}

.position-absolute {
  position: absolute;
}


.overflow-y-auto {
  overflow-y: auto;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.d-flex {
  display: flex;
}

.align-items-center {
  align-items: center;
}

.Inline {
  display: inline-block;
  width: 200px;
  height: 100px;
  margin: 1em;
}

@each $cols-value in $cols {
  .col-#{$cols-value} {
    grid-column: span $cols-value !important;
    padding-left: 12px;
    padding-right: 12px;
  }

  .offset-#{$cols-value} {
    margin-left: calc(100% / $max-columns * $cols-value + 12px) !important;
    margin-right: calc(100% / $max-columns * $cols-value + 12px) !important;
    padding-right: 12px;
  }

  @include web() {
    .col-md-#{$cols-value} {
      grid-column: span $cols-value !important;
      margin-left: 12px;
      margin-right: 12px;
    }

    .offset-md-#{$cols-value} {
      margin-left: calc(100% / $max-columns * $cols-value + 12px) !important;
      padding-right: 12px;
    }
  }
}


@each $space-name,
$space-value in $spacing {
  .m-#{$space-name} {
    margin: $space-value;
  }

  .p-#{$space-name} {
    padding: $space-value;
  }

  @each $position-name,
  $position-value in $positions {
    .p#{$position-value}-#{$space-name} {
      padding-#{$position-name}: $space-value;
    }

    .m#{$position-value}-#{$space-name} {
      margin-#{$position-name}: $space-value;
    }
  }
}


@each $colors-name,
$colors-value in $colors {

  @each $opacity-name,
  $opacity-value in $opacity {
    .ball-#{$colors-name}-#{$opacity-name} {
      height: 300px;
      width: 300px;
      border-radius: 100%;
      z-index: -1;
      background: rgba($colors-value, $opacity-value);
      filter: blur(72px);
    }
  }
}

.justify-content-arround {
  justify-content: space-around;
}

.flex-col {
  flex-direction: column;
}

.align-items-end {
  align-items: end;
}

.justify-content-end {
  justify-content: end;
}

// #NIT{
//   background-image: url("./../img/Nome.png");
//   background-repeat: no-repeat;
//   background-position: center right;
// } 
// #EIT{
//   background-image: url("./../img/email.png");
//   background-repeat: no-repeat;
//   background-position: center right;
// }
// #MIT{
//   background-image: url("./../img/mensagem.png");
//   background-repeat: no-repeat;
//   background-position: top right;
// } 


.input-container {
  display: flex;
  position: relative;
  
  textarea {
    resize: none;
  }

  input, textarea {
    width: 100%;
    padding: 10px;
    border-radius: 6px;
    border: solid 1px map-get($colors, dark);
    background: map-get($colors, light);
    color: map-get($colors, dark);
    padding-right: 42px;

    @include apply-dark-style() {
      border: solid 1px map-get($colors, light);
      background: map-get($colors, dark);
      color: map-get($colors, light);
    }
  }

  .input-icon {
    position: absolute;
    right: 12px;
    top: 8px;
  }

}




.animation-scroll-top {
  animation: fadeTop both 1.2s;
  // animation-timeline: view(inline);
  // animation-range: entry 50% cover 50%;
}

@keyframes fadeTop {
  from {
    opacity: 0;
    transform: translateY(-100px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}